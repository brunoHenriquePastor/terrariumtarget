name: Pipeline CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:

    runs-on: ubuntu-20.04
    env:           
      DOCKER_IMAGE: bhpdocker/terrarium_target 
  

    steps:

    # - name: Maximize build space
    #   uses: easimon/maximize-build-space@master
    #   with:
    #     root-reserve-mb: 512
    #     swap-size-mb: 1024
    #     remove-dotnet: 'true'

    # Get the repository's code
    - name: Checkout
      uses: actions/checkout@v2
      # https://github.com/docker/setup-qemu-action
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    # - name: login to docker hub
    #   run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin


    # - uses: pguyot/arm-runner-action@v2
    #   id: build_image
    #   with:
    #     base_image: dietpi:rpi_armv8_bullseye
    #     commands: |
    #         docker buildx build \
    #         --tag ${{ env.DOCKER_IMAGE }} \
    #         --platform linux/arm64  .



    - name: build the image
      run: |
        docker buildx build \
          --tag ${{ env.DOCKER_IMAGE }} \
          --platform linux/arm64  .








  test:

    runs-on: ubuntu-20.04
    needs: [build]
    env:           
      DOCKER_IMAGE: env.DOCKER_IMAGE
  

    steps:
    # Get the repository's code
    - name: Checkout
      uses: actions/checkout@v2
      # https://github.com/docker/setup-qemu-action
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
  
    # - name: Analysing the code with pylint
    #   run: |
    #     pylint $(git ls-files '*.py')
    - name: Analysing the code with doctest
      run: |
        python -m doctest -v test/test_with_doctest.py 







  delivery:

    runs-on: ubuntu-20.04
    needs: [test]

    # strategy:
    #   matrix:
    #     arch: [armv6l, armv7l, aarch64]
    #     include:
    #     - arch: armv6l
    #       cpu: arm1176
    #       base_image: raspios_lite:latest
    #       cpu_info: cpuinfo/raspberrypi_zero2_w_arm64
    #     - arch: armv7l
    #       cpu: cortex-a7
    #       base_image: raspios_lite:latest
    #       cpu_info: raspberrypi_3b
    #     - arch: aarch64
    #       cpu: cortex-a53
    #       base_image: raspios_lite_arm64:latest
    #       cpu_info: cpuinfo/raspberrypi_4b


    env:           
      DOCKER_IMAGE: env.DOCKER_IMAGE
  

    steps:
    # # Get the repository's code
    # - name: Checkout
    #   uses: actions/checkout@v2
    #   # https://github.com/docker/setup-qemu-action
    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v1
    #   # https://github.com/docker/setup-buildx-action
    # - name: Set up Docker Buildx
    #   id: buildx
    #   uses: docker/setup-buildx-action@v1

    - name: login to docker hub
      run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/arm64
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/terrarium_target:latest 
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/terrarium_target:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/terrarium_target:buildcache,mode=max



    #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

  